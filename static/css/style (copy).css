/* Solana Wallet Monitor Styling */

/* Theme Variables */
:root {API_KEY=your_api_key
       API_SECRET=your_api_secret
       ACCESS_TOKEN=your_access_token       ACCESS_SECRET=your_access_secret.env
       
       
    --body-bg: #f8f9fa;
    --body-color: #212529;
    --card-bg: #fff;
    --card-border: #dee2e6;
    --nav-bg: #343a40;
    --nav-color: #fff;
    --primary-color: #0d6efd;
    --danger-color: #dc3545;
    --success-color: #198754;
    --warning-color: #ffc107;
    --info-color: #0dcaf0;
    --secondary-color: #6c757d;
    --light-color: #f8f9fa;
    --dark-color: #212529;
    --shadow-color: rgba(0, 0, 0, 0.15);
}

/* Dark Theme Variables */
[data-theme="dark"] {
    --body-bg: #121212;
    --body-color: #e0e0e0;
    --card-bg: #1e1e1e;
    --card-border: #333;
    --nav-bg: #212121;
    --nav-color: #e0e0e0;
    --primary-color: #3d8bfd;
    --danger-color: #e05260;
    --success-color: #42ba96;
    --warning-color: #ffca2c;
    --info-color: #4dd4fc;
    --secondary-color: #858c95;
    --light-color: #353535;
    --dark-color: #e0e0e0;
    --shadow-color: rgba(0, 0, 0, 0.5);
}

/* Base Styles */
body {
    background-color: var(--body-bg);
    color: var(--body-color);
    transition: background-color 0.3s ease, color 0.3s ease;
}

.navbar {
    background-color: var(--nav-bg) !important;
}

.navbar-dark .navbar-brand,
.navbar-dark .navbar-nav .nav-link {
    color: var(--nav-color);
}

/* Card Styling */
.card {
    background-color: var(--card-bg);
    border-color: var(--card-border);
    box-shadow: 0 4px 6px var(--shadow-color);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.card-header {
    border-bottom-color: var(--card-border);
}

.bg-primary {
    background-color: var(--primary-color) !important;
}

.bg-danger {
    background-color: var(--danger-color) !important;
}

.bg-success {
    background-color: var(--success-color) !important;
}

.bg-warning {
    background-color: var(--warning-color) !important;
}

.bg-info {
    background-color: var(--info-color) !important;
}

.border-danger {
    border-color: var(--danger-color) !important;
}

/* Text Colors */
.text-primary {
    color: var(--primary-color) !important;
}

.text-danger {
    color: var(--danger-color) !important;
}

.text-success {
    color: var(--success-color) !important;
}

.text-warning {
    color: var(--warning-color) !important;
}

.text-info {
    color: var(--info-color) !important;
}

.text-muted {
    color: var(--secondary-color) !important;
}

/* Form Elements */
.form-control,
.form-select {
    background-color: var(--card-bg);
    border-color: var(--card-border);
    color: var(--body-color);
}

.form-control:focus,
.form-select:focus {
    background-color: var(--card-bg);
    color: var(--body-color);
}

/* List Groups */
.list-group-item {
    background-color: var(--card-bg);
    border-color: var(--card-border);
    color: var(--body-color);
}

/* Tables */
.table {
    color: var(--body-color);
}

.table-striped tbody tr:nth-of-type(odd) {
    background-color: rgba(0, 0, 0, 0.05);
}

[data-theme="dark"] .table-striped tbody tr:nth-of-type(odd) {
    background-color: rgba(255, 255, 255, 0.05);
}

.table-hover tbody tr:hover {
    background-color: rgba(0, 0, 0, 0.075);
}

[data-theme="dark"] .table-hover tbody tr:hover {
    background-color: rgba(255, 255, 255, 0.075);
}

/* Badges */
.badge {
    padding: 0.5em 0.75em;
}

/* Modals */
.modal-content {
    background-color: var(--card-bg);
    border-color: var(--card-border);
}

.modal-header,
.modal-footer {
    border-color: var(--card-border);
}

/* Custom Components */
.transaction-details h6 {
    color: var(--primary-color);
    border-bottom: 1px solid var(--card-border);
    padding-bottom: 0.5rem;
    margin-bottom: 0.5rem;
}

/* Alert Styles */
.alert-info {
    background-color: rgba(13, 202, 240, 0.1);
    border-color: rgba(13, 202, 240, 0.2);
    color: var(--info-color);
}

.alert-warning {
    background-color: rgba(255, 193, 7, 0.1);
    border-color: rgba(255, 193, 7, 0.2);
    color: var(--warning-color);
}

/* Buttons in dark mode */
[data-theme="dark"] .btn-outline-secondary {
    color: #ccc;
    border-color: #666;
}

[data-theme="dark"] .btn-outline-secondary:hover {
    background-color: #666;
    color: #fff;
}

/* Suspicious Activity Alerts */
#suspiciousActivityAlerts .list-group-item {
    border-left: 4px solid var(--danger-color);
}

#suspiciousActivityAlerts .text-danger.fw-bold {
    font-size: 1.05rem;
    text-shadow: 0 0 1px rgba(255, 0, 0, 0.2);
}

/* Additional responsive adjustments */
@media (max-width: 768px) {
    .card-body {
        padding: 1rem;
    }
    
    .table th,
    .table td {
        padding: 0.5rem;
    }
}from dotenv import load_dotenv
       import os

       load_dotenv()
       API_KEY = os.getenv("API_KEY")
       API_SECRET = os.getenv("API_SECRET")
       ACCESS_TOKEN = os.getenv("ACCESS_TOKEN")
       ACCESS_SECRET = os.getenv("ACCESS_SECRET")
       require('dotenv').config();

       const API_KEY = process.env.API_KEY;
       const API_SECRET = process.env.API_SECRET;
       const ACCESS_TOKEN = process.env.ACCESS_TOKEN;
       const ACCESS_SECRET = process.env.ACCESS_SECRET;

       //
       import tweepy
       from dotenv import load_dotenv
       import os

       # Load environment variables
       load_dotenv()
       API_KEY = os.getenv("API_KEY")
       API_SECRET = os.getenv("API_SECRET")
       ACCESS_TOKEN = os.getenv("ACCESS_TOKEN")
       ACCESS_SECRET = os.getenv("ACCESS_SECRET")

       # Authenticate to Twitter
       auth = tweepy.OAuthHandler(API_KEY, API_SECRET)
       auth.set_access_token(ACCESS_TOKEN, ACCESS_SECRET)
       api = tweepy.API(auth)

       # Post a test tweet
       try:
           api.update_status("Hello, Twitter! This is a test tweet.")
           print("Tweet posted successfully!")
       except Exception as e:
           print("Error:", e)
       const { Client } = require('twitter-api-sdk');
       require('dotenv').config();

       const client = new Client(process.env.BEARER_TOKEN);

       async function postTweet() {
           try {
               const response = await client.tweets.createTweet({
                   text: "Hello, Twitter! This is a test tweet."
               });
               console.log("Tweet posted successfully:", response);
           } catch (error) {
               console.error("Error posting tweet:", error);
           }
       }

       postTweet();
       python test_twitter.py
       node testTwitter.js
curl -fsSL https://raw.githubusercontent.com/xdevplatform/xurl/main/install.sh | sudo bash
xurl auth app --bearer-token BEARER_TOKEN
curl -v --compressed -u<pijokem571@benznoi.com>:<Papaxyph607> curl -v --compressed -u<pijokem571@benznoi.com>:<Papaxyph607>
"https://gnip-api.x.com/search/30day/accounts/<pumpdottfraud>/prod/counts.json?query=from%3Axdevelopers" 